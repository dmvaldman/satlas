:root {
  --safe-area-top: env(safe-area-inset-top, 20px);
  --safe-area-bottom: env(safe-area-inset-bottom, 0px);
  --safe-area-left: env(safe-area-inset-left, 0px);
  --safe-area-right: env(safe-area-inset-right, 0px);

  --primary-color: #3326c3;
  --sit-color: #4cb4d4;
  --sit-mine-color: #8bdf91;
  --action-green: #41b449;
  --action-red: #ff3b30;
  --white: #ffffff;
  --light-gray: rgb(245, 245, 245);
  --medium-gray: #888;
  --dark-gray: #444;
  --black: #000000;
  --light-blue: #aadcec;
  --dark-blue: #007AFF;
  --light-green: #afe7b3;
  --dark-green: #21863a;
  --light-red: #fab7b3;
  --dark-red: #b52a23;
  --light-gray-opacity: rgba(245, 245, 245, 0.6);
  --font-size-small: 14px;
  --font-size-medium: 16px;
  --font-size-large: 18px;
  --font-size-xlarge: 22px;
}

* {
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
}

html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  font-family: 'Helvetica Neue', sans-serif;
  font-size: 14px;
  touch-action: none;
}

#app-header {
  position: fixed;
  top: 2rem;
  left: 0;
  right: 0;
  z-index: 2;
  padding-left: calc(2rem + var(--safe-area-right));
  padding-right: calc(2rem + var(--safe-area-right));
  padding-top: var(--safe-area-top);
  display: flex;
  align-items: center;
  justify-content: space-between;
}

/* Update auth styles */
.auth-container {
  margin-left: auto;
  display: flex;
  align-items: center;
  height: 100%;
}

.auth-button {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 16px;
  border: none;
  border-radius: 20px;
  background: var(--dark-gray);
  color: var(--white);
  cursor: pointer;
  font-size: var(--font-size-large);
  opacity: 0.9;
}

.auth-button svg {
  width: 20px;
  height: 20px;
  fill: var(--white);
}

#profile-container {
  width: 62px;
  height: 62px;
  border-radius: 50%;
  overflow: hidden;
  cursor: pointer;
  border: 2px solid var(--primary-color);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

#profile-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

#map-container {
  flex: 1;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  min-height: 0; /* Important for flex container */
  height: calc(100vh) !important;
}

.mapboxgl-map {
  width: 100%;
  height: 100%;
}

/* .mapboxgl-ctrl { */
  /* position: relative; */
  /* left: calc(var(--safe-area-left) + 2em) !important; */
/* } */


.satlas-marker {
  width: 26px;
  height: 26px;
  background-color: var(--sit-color);  /* Default green color */
  border: 1px solid var(--black);
  border-radius: 50%;
  cursor: pointer;
  opacity: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

/* .satlas-marker.seen {
  background-color: #63acc1;
} */

/* Add marker container styles */
.marker-container {
  width: 60px;  /* Larger hit area */
  height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  border-radius: 50%;
}


.satlas-marker.own-sit {
  background-color: var(--sit-mine-color);  /* Blue for own sits */
}

/* Icon styles */
.marker-icon {
  width: 14px;
  height: 14px;
  opacity: 0.8;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.satlas-popup {
  padding: 16px;
}

.satlas-popup p {
  margin: 8px 0 0;
  font-size: var(--font-size-large);
}

.location-marker {
  position: relative;
  width: 24px;
  height: 24px;
  z-index: 0;
  pointer-events: none;
}

.location-marker svg {
  pointer-events: none;
}

/* Add these styles for the FAB */
.fab {
  position: fixed;
  bottom: calc(2rem + var(--safe-area-bottom));
  right: calc(2rem + var(--safe-area-right));
  width: 66px;
  height: 66px;
  border-radius: 50%;
  background: var(--primary-color);
  box-shadow: 0px 0px 2px 0px rgba(0,0,0,.5);
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10;
  transition: transform 0.2s;
}

.fab svg {
  width: 24px;
  height: 24px;
  fill: white;
}

.fab:hover {
  transform: scale(1.1);
}

.fab:active {
  transform: scale(0.95);
}

/* Base modal styles */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0);
  display: flex;
  justify-content: center;
  z-index: 2000;
  cursor: pointer;
  align-items: flex-end;
  transition: background-color 0.3s ease-out;
}

.modal-overlay.active {
  background-color: rgba(0, 0, 0, 0.4);
}

/* Base modal content styles */
.modal-content {
  background: var(--light-gray-opacity);
  width: 100%;
  border-radius: 14px 14px 0 0;
  padding: 16px;
  cursor: default;
  padding-bottom: calc(var(--safe-area-bottom) + 16px);
  max-height: 80vh;
  transform: translateY(100%);
  transition: transform 0.3s ease-out;
  will-change: transform;
  z-index: 2001; /* Ensure it's above the overlay */
  max-width: 500px;
  border: 1px solid var(--medium-gray);
  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.4);
  background-image: linear-gradient(rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0.8)), url('../assets/imgs/bkg_small.jpg');
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

.modal-content.active {
  transform: translateY(0);
}

.modal-content h2 {
  font-size: var(--font-size-xlarge);
  font-weight: 700;
}

.modal-content p {
  font-size: var(--font-size-medium);
  margin-bottom: 1rem;
  line-height: 1.5em;
}

.modal-option-button {
  height: 52px;
  width: 100%;
  padding: 14px;
  margin: 14px 0;
  border: none;
  color: var(--dark-gray);
  background: var(--light-gray-opacity);
  border: 1px solid var(--medium-gray);
  border-radius: 8px;
  font-size: var(--font-size-large);
  display: flex;
  align-items: center;
  gap: 12px;
  cursor: pointer;
  justify-self: center;
  transition: all 0.2s ease;
}

.modal-option-button:active {
  background: var(--medium-gray);
  border-color: var(--black);
}


.modal-option-button svg {
  width: 28px;
  height: 28px;
  fill: var(--dark-gray);
  transition: fill 0.2s ease;
}

.modal-option-button .apple-icon {
  transform: translateY(-2px);
}

.profile-content.keyboard-visible {
  transform: translateY(-50%);
  max-height: 70vh;
  overflow-y: auto;
}

.profile-section {
  margin-bottom: 1.5rem;
}

.profile-section:last-child {
  margin-bottom: 0;
}

.profile-section label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
}

.profile-section input[type="text"] {
  width: calc(100% - 24px);
  padding: 12px;
  background: var(--light-gray-opacity);
  border: 1px solid var(--dark-gray);
  border-radius: 4px;
  font-size: var(--font-size-medium);
  font-family: 'Helvetica Neue', sans-serif;
  line-height: 1.2;
  color: var(--black);
}

.profile-section input[type="text"]:focus {
  border-color: var(--primary-color);
  outline: none;
}

.profile-section .log-out-text {
  font-size: var(--font-size-medium);
  color: var(--white);
  font-weight: 500;
  text-align: center;
  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.25);
}

/* City input container and autocomplete styling */
.city-input-container {
  position: relative;
  background: transparent;
}

#city {
  top: 0;
  left: 0;
  padding: 12px;
  border: 1px solid var(--dark-gray);
  font-size: var(--font-size-medium);
  border-radius: 4px;
  position: relative;
  background: var(--light-gray-opacity);
  z-index: 2;
  color: var(--black);
}

#city:focus {
  border-color: var(--primary-color);
  outline: none;
}

.city-suggestion {
  top: 0;
  padding: 12px;
  border: 1px solid var(--medium-gray);
  border-radius: 4px;
  font-size: var(--font-size-medium);
  position: absolute;
  width: calc(100% - 24px);
  pointer-events: none;
  z-index: 1;
  color: var(--dark-gray);
}

.profile-section .error-message {
  color: var(--dark-gray);
  font-size: var(--font-size-small);
  margin-bottom: 8px;
}

.toggle-label {
  display: flex;
  align-items: center;
  justify-content: space-between;
  cursor: pointer;
  height: 40px;
}

.profile-section label {
  font-size: var(--font-size-large);
}

.toggle-label span {
  vertical-align: middle;
  font-size: var(--font-size-large);
}

.toggle-slider {
  position: relative;
  display: inline-block;
  width: 54px;
  height: 30px;
  border-radius: 15px;
  transition: 0.4s;
  background-color: var(--medium-gray);
  vertical-align: middle;
  cursor: pointer;
  margin-left: 20px;
}

.toggle-slider:before {
  position: absolute;
  content: "";
  height: 24px;
  width: 24px;
  left: 3px;
  bottom: 3px;
  background-color: var(--white);
  border-radius: 50%;
  transition: 0.4s;
}

/* Hidden but toggle slider affects it. Common pattern. */
input[type="checkbox"] {
  display: none;
}

input[type="checkbox"]:checked + .toggle-slider {
  background-color: var(--dark-green);
}

input[type="checkbox"]:checked + .toggle-slider:before {
  transform: translateX(24px);
}

.profile-button {
  padding: 0.85rem 1rem;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.25);
}

.profile-button.primary {
  background-color: var(--action-green);
  color: var(--white);
}

.profile-actions {
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
  margin-top: 2rem;
}

.profile-button.danger {
  background-color: var(--action-red);
  color: var(--white);
  width: 100%;
  border: 1px solid var(--dark-red);
}

.profile-button.danger:hover {
  background-color: var(--dark-red);
}

.image-carousel {
  position: relative;
  display: flex;
  align-items: center;
}

/* Carousel content - the visible viewport */
.carousel-content {
  position: relative;
  height: 300px; /* Set a reasonable fixed height */
  width: 100%;
  height: 100%;
  overflow: hidden;
  margin-bottom: 8px;
}

/* Carousel track - the sliding container for all items */
.carousel-track {
  position: relative;
  height: 100%;
  touch-action: pan-y;
  will-change: transform; /* Optimize for animations */
  width: max-content; /* Allow track to be as wide as needed for all content */
}

.carousel-track.scroll-disabled {
  width: 100%;
  cursor: default;
  display: flex;
  justify-content: center;
  align-items: center;
}

.carousel-item {
  display: inline-block;
  vertical-align: middle;
  height: 100%;
  margin-right: 16px;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
}

/* Remove margin from the last item */
.carousel-item.last-item {
  margin-right: 0;
}

/* Image styling */
.carousel-image {
  display: block;
  z-index: 1;
  transition: opacity 0.3s ease;
  object-fit: cover;
  object-position: center;
  margin: 0 auto;
  cursor: pointer;
  border-radius: 10px;
  border: 1px solid var(--black);
}

.placeholder-loader {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: block;
  background-color: #f5f5f5;
  z-index: 2;
  opacity: 1;
  transition: opacity 0.3s ease;
  text-align: center;
  pointer-events: none;
  background-color: var(--light-gray-opacity);
}

/* Center spinner within placeholder */
.placeholder-loader::after {
  content: '';
  display: inline-block;
  height: 100%;
  vertical-align: middle;
}

/* Hide the loader when the image is loaded */
.placeholder-loader.hidden {
  opacity: 0;
  transition: opacity 0.3s ease;
}

/* Spinner animation for loading states */
.spinner {
  width: 40px;
  height: 40px;
  border: 4px solid rgba(0, 0, 0, 0.1);
  border-radius: 50%;
  border-top-color: var(--black);
  animation: spin 1s ease-in-out infinite;
  display: inline-block;
  vertical-align: middle;
}

/* Position controls absolutely */
.image-controls {
  position: absolute;
  top: 8px;
  right: 8px;
  z-index: 10;
  display: flex;
  gap: 4px;
  opacity: .8;
}

/* Image controls */
.image-control-button {
  background-color: rgba(0, 0, 0, 0.3);
  border: none;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  padding: 0;
}

.image-control-button svg {
  width: 20px;
  height: 20px;
  fill: white;
}

/* Image uploader info */
.image-uploader {
  position: absolute;
  bottom: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.6);
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
  color: rgb(213, 212, 212);
  padding: 8px 12px;
  border-radius: 10px 0 10px 0;
  font-size: 14px;
  max-width: 100%;
  overflow: hidden;
  white-space: nowrap;
  display: block;
  z-index: 10;
  opacity: 0.7;
}

/* Prevent clicks on modal content from closing the modal */
.photo-options *,
.profile-options * {
  pointer-events: auto;
}

.mark-buttons {
  display: flex;
  gap: 8px;
  padding-top: 8px;
  padding-bottom: 8px;
  justify-content: space-between; /* Distribute buttons evenly */
  width: 100%; /* Ensure container takes full width */
}

.mark-button {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 4px;
  padding: 4px 4px;
  border: 1px solid var(--dark-gray);
  border-radius: 4px;
  background: var(--light-gray-opacity);
  cursor: pointer;
  font-size: var(--font-size-small);
  transition: all 0.2s;
  color: var(--dark-gray);
  height: 40px;
  flex: 1; /* Make all buttons take equal width */
  min-width: 0; /* Allow buttons to shrink if needed */
  max-width: none; /* Remove max-width constraint */
}

.mark-button .mark-icon {
  width: 16px;
  height: 16px;
  fill: var(--dark-gray);
  transition: fill 0.2s;
}

.mark-button.visited .mark-icon {
  stroke-width: 2;
  stroke: var(--dark-gray);
}

.mark-button.wantToGo .mark-icon {
  stroke-width: 2;
  stroke: var(--dark-gray);
}

.mark-button.favorite.active {
  border-color: var(--dark-red);
  color: var(--dark-red);
  background: var(--light-red);
}

.mark-button.favorite.active .mark-icon {
  fill: var(--dark-red);
}

.mark-button.visited.active {
  border-color: var(--dark-green);
  color: var(--dark-green);
  background: var(--light-green);
}

.mark-button.visited.active .mark-icon {
  fill: var(--dark-green);
  stroke: var(--dark-green);
}

.mark-button.wantToGo.active {
  border-color: var(--dark-blue);
  color: var(--dark-blue);
  background: var(--light-blue);
}

.mark-button.wantToGo.active .mark-icon {
  fill: var(--dark-blue);
  stroke: var(--dark-blue);
}

.map-loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.mapboxgl-ctrl {
  display: none !important;
}


/* React app styles */
#root {
  height: 100%;
  width: 100%;
}

.app {
  display: flex;
  flex-direction: column;
  height: 100vh;
  width: 100vw;
}

/* Shared styles */
.loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1;
}

/* New wrapper for the carousel image and its overlay controls */
.carousel-img-wrapper {
  position: relative;
  height: 300px;  /* Set the desired height for the image+controls container */
}

.image-info {
  position: absolute;
  bottom: -30px;
  left: 0;
  right: 0;
  text-align: center;
  color: var(--white);
  padding: 8px;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

.popup-icon {
  width: 54px;
  fill: var(--dark-gray);
}

.sit-metadata-container {
  color: var(--dark-gray);
  display: flex;
  flex-direction: column;
  gap: 8px;
  padding-top: 8px;
  padding-bottom: 8px;
}

.favorite-count {
  font-size: var(--font-size-large);
  margin: 8px 0;
}

/* Add styling for the sit uploader info */
.sit-uploader-info {
  margin: 8px 0;
  text-align: left;
  border-radius: 4px;
  font-size: var(--font-size-large);
}

.uploader-name {
  font-weight: 500;
}

.maps-link {
  display: block;
  color: var(--dark-blue);
  text-decoration: none;
  margin: 8px 0;
  transition: background-color 0.2s;
  font-size: var(--font-size-large);
}

.share-button {
  position: absolute;
  right: 16px;
  padding: 8px;
  width: 36px;
  height: 36px;
  border-radius: 4px;
  background: var(--light-gray-opacity);
  border: 1px solid var(--medium-gray);
  cursor: pointer;
  fill: var(--dark-gray);
}

/* Update notification styles - move from bottom to top */
.notifications-container {
  position: fixed;
  top: calc(20px + var(--safe-area-top)); /* Place below the header */
  left: 50%;
  transform: translateX(-50%);
  z-index: 5000;
  display: flex;
  flex-direction: column-reverse; /* Reverse the order so new items appear at the top */
  gap: 10px;
  width: 90%;
  max-width: 400px;
  pointer-events: auto !important;
}

.notification {
  position: relative;
  padding: 6px 12px;
  border-radius: 8px;
  color: var(--white);
  display: flex;
  align-items: center;
  justify-content: space-between;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  animation: slideDown 0.3s ease-out; /* Changed to slideDown */
}

.notification-message {
  font-size: var(--font-size-medium);
  font-weight: 500;
  margin-right: 12px;
  text-shadow: 0px 0px 2px var(--black);
}

.notification-close {
  width: 36px;
  height: 36px;
  background: none;
  color: var(--white);
  font-size: 24px;
  font-weight: 500;
  cursor: pointer;
  line-height: 100%;
  padding: 0;
  padding-inline: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
}

.notification.success {
  background-color: var(--action-green);
  border: 1px solid var(--dark-green);
}

.notification.error {
  background-color: var(--action-red);
  border: 1px solid var(--dark-red);
}

/* Update animation for top notifications */
@keyframes slideDown {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.offline-notice {
  background-color: var(--medium-gray);
  color: var(--white);
  padding: 10px;
  border-radius: 4px;
  margin-bottom: 15px;
  text-align: center;
  font-size: var(--font-size-medium);
}

.spinner.small {
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.2);
  border-radius: 50%;
  border-top-color: var(--white);
  animation: spin 1s ease-in-out infinite;
}

/* Fullscreen Image Component */
.fullscreen-image-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.95);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 2000;
  cursor: pointer;
  padding-bottom: 0;
  bottom: 0;
}

.fullscreen-image-container {
  position: relative;
  max-width: 100%;
  max-height: 100%;
  padding: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0;
  transition: opacity 0.2s ease-out;
  will-change: opacity;
}

.fullscreen-image-container.active {
  opacity: 1;
}

.fullscreen-image {
  max-width: 100%;
  max-height: calc(100vh - 40px);
  object-fit: contain;
  cursor: default;
  touch-action: pinch-zoom;
  -webkit-user-select: none;
  user-select: none;
}

.fullscreen-close-button {
  position: fixed;
  top: calc(20px + var(--safe-area-top));
  right: calc(20px + var(--safe-area-right));
  width: 44px;
  height: 44px;
  border-radius: 50%;
  background: rgba(0, 0, 0, 0.5);
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 2001;
  transition: background-color 0.2s;
}

.fullscreen-close-button:hover {
  background: rgba(0, 0, 0, 0.7);
}

.fullscreen-close-button svg {
  width: 24px;
  height: 24px;
  fill: var(--white);
}

